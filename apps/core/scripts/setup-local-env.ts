import fs from "fs";
import path from "path";

interface ContractAddresses {
  VAI_TOKEN: string;
  MEMBERSHIP: string;
  BOOTSTRAP_BAY: string;
}

export function setupLocalEnv(addresses: ContractAddresses) {
  const webEnvPath = path.join(__dirname, "../../web/.env.local");

  const envContent = `# VAI Protocol - Local Development Environment
# Auto-generated by deployment script on ${new Date().toISOString()}

# Web3 Configuration  
NEXT_PUBLIC_PROJECT_ID=f7c0b453a4b0ad309e64b1a5c5bfc17a

# Network Configuration - specify single network only
NEXT_PUBLIC_NETWORK=localhost

# Contract Addresses (works for any network)
NEXT_PUBLIC_VAI_TOKEN=${addresses.VAI_TOKEN}
NEXT_PUBLIC_MEMBERSHIP=${addresses.MEMBERSHIP}
NEXT_PUBLIC_BOOTSTRAP_BAY=${addresses.BOOTSTRAP_BAY}
`;

  // Create directory if it doesn't exist
  const webDir = path.dirname(webEnvPath);
  if (!fs.existsSync(webDir)) {
    fs.mkdirSync(webDir, { recursive: true });
  }

  // Write environment file
  fs.writeFileSync(webEnvPath, envContent);

  console.log("\n‚úÖ Created .env.local for web app");
  console.log("üìÅ Location:", webEnvPath);
  console.log("\nüîë Contract Addresses:");
  console.log("VAI Token:", addresses.VAI_TOKEN);
  console.log("Membership:", addresses.MEMBERSHIP);
  console.log("Bootstrap Bay:", addresses.BOOTSTRAP_BAY);
  console.log("\nüí° Network Configuration:");
  console.log("‚Ä¢ Current Network: localhost (Chain ID: 31337)");
  console.log("‚Ä¢ Network switching: Disabled");
  console.log("‚Ä¢ Contract addresses work across all networks");
  console.log("\nüöÄ Next Steps:");
  console.log("1. Start web app: cd apps/web && pnpm dev");
  console.log("2. Connect MetaMask to localhost:8545");
  console.log("3. Import hardhat test account to MetaMask");
  console.log("4. Optionally update NEXT_PUBLIC_PROJECT_ID for your own WalletConnect project");
}

export default setupLocalEnv;
